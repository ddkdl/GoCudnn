//
// Generated by NVIDIA NVVM Compiler
//
// Compiler Build ID: CL-23920284
// Cuda compilation tools, release 9.2, V9.2.88
// Based on LLVM 3.4svn
//

.version 6.2
.target sm_61
.address_size 64

	// .globl	adagradfloat

.visible .entry adagradfloat(
	.param .u32 adagradfloat_param_0,
	.param .u64 adagradfloat_param_1,
	.param .u64 adagradfloat_param_2,
	.param .u64 adagradfloat_param_3,
	.param .f32 adagradfloat_param_4,
	.param .f32 adagradfloat_param_5
)
{
	.reg .pred 	%p<2>;
	.reg .f32 	%f<13>;
	.reg .b32 	%r<8>;
	.reg .b64 	%rd<11>;


	ld.param.u32 	%r2, [adagradfloat_param_0];
	ld.param.u64 	%rd1, [adagradfloat_param_1];
	ld.param.u64 	%rd2, [adagradfloat_param_2];
	ld.param.u64 	%rd3, [adagradfloat_param_3];
	ld.param.f32 	%f1, [adagradfloat_param_4];
	ld.param.f32 	%f2, [adagradfloat_param_5];
	mov.u32 	%r3, %ctaid.x;
	mov.u32 	%r4, %ntid.x;
	mov.u32 	%r5, %tid.x;
	mad.lo.s32 	%r1, %r4, %r3, %r5;
	setp.ge.s32	%p1, %r1, %r2;
	@%p1 bra 	BB0_2;

	cvta.to.global.u64 	%rd4, %rd3;
	mul.wide.s32 	%rd5, %r1, 4;
	add.s64 	%rd6, %rd4, %rd5;
	ld.global.f32 	%f3, [%rd6];
	cvt.rzi.s32.f32	%r6, %f3;
	cvt.rn.f32.s32	%f4, %r6;
	cvta.to.global.u64 	%rd7, %rd2;
	add.s64 	%rd8, %rd7, %rd5;
	ld.global.f32 	%f5, [%rd8];
	fma.rn.f32 	%f6, %f5, %f5, %f4;
	st.global.f32 	[%rd6], %f6;
	ld.global.f32 	%f7, [%rd8];
	mul.f32 	%f8, %f7, %f1;
	neg.f32 	%f9, %f8;
	sqrt.rn.f32 	%f10, %f6;
	add.f32 	%f11, %f10, %f2;
	div.rn.f32 	%f12, %f9, %f11;
	cvta.to.global.u64 	%rd9, %rd1;
	add.s64 	%rd10, %rd9, %rd5;
	st.global.f32 	[%rd10], %f12;
	mov.u32 	%r7, 0;
	st.global.u32 	[%rd8], %r7;

BB0_2:
	ret;
}

	// .globl	adamfloat
.visible .entry adamfloat(
	.param .u32 adamfloat_param_0,
	.param .u64 adamfloat_param_1,
	.param .u64 adamfloat_param_2,
	.param .u64 adamfloat_param_3,
	.param .u64 adamfloat_param_4,
	.param .f32 adamfloat_param_5,
	.param .f32 adamfloat_param_6,
	.param .f32 adamfloat_param_7,
	.param .f32 adamfloat_param_8
)
{
	.reg .pred 	%p<58>;
	.reg .f32 	%f<258>;
	.reg .b32 	%r<48>;
	.reg .f64 	%fd<27>;
	.reg .b64 	%rd<23>;


	ld.param.u32 	%r2, [adamfloat_param_0];
	ld.param.u64 	%rd5, [adamfloat_param_2];
	ld.param.u64 	%rd7, [adamfloat_param_4];
	ld.param.f32 	%f31, [adamfloat_param_5];
	ld.param.f32 	%f34, [adamfloat_param_8];
	mov.u32 	%r3, %ctaid.y;
	mov.u32 	%r4, %nctaid.x;
	mov.u32 	%r5, %ctaid.x;
	mad.lo.s32 	%r6, %r4, %r3, %r5;
	mov.u32 	%r7, %ntid.x;
	mov.u32 	%r8, %tid.x;
	mad.lo.s32 	%r1, %r6, %r7, %r8;
	setp.ge.s32	%p3, %r1, %r2;
	@%p3 bra 	BB1_28;

	cvta.to.global.u64 	%rd8, %rd5;
	mul.wide.s32 	%rd9, %r1, 4;
	add.s64 	%rd10, %rd8, %rd9;
	ld.global.f32 	%f37, [%rd10];
	mul.f32 	%f38, %f37, %f31;
	cvt.f64.f32	%fd3, %f38;
	cvt.f64.f32	%fd4, %f31;
	mov.f64 	%fd5, 0d3FF0000000000000;
	sub.f64 	%fd6, %fd5, %fd4;
	cvta.to.global.u64 	%rd11, %rd7;
	add.s64 	%rd3, %rd11, %rd9;
	ld.global.f32 	%f39, [%rd3];
	cvt.f64.f32	%fd7, %f39;
	fma.rn.f64 	%fd8, %fd6, %fd7, %fd3;
	cvt.rn.f32.f64	%f40, %fd8;
	st.global.f32 	[%rd10], %f40;
	cvt.f64.f32	%fd1, %f40;
	mul.f32 	%f41, %f34, 0f3F000000;
	cvt.rzi.f32.f32	%f42, %f41;
	fma.rn.f32 	%f43, %f42, 0fC0000000, %f34;
	abs.f32 	%f1, %f43;
	abs.f32 	%f2, %f31;
	setp.lt.f32	%p4, %f2, 0f00800000;
	mul.f32 	%f44, %f2, 0f4B800000;
	selp.f32	%f45, 0fC3170000, 0fC2FE0000, %p4;
	selp.f32	%f46, %f44, %f2, %p4;
	mov.b32 	 %r9, %f46;
	and.b32  	%r10, %r9, 8388607;
	or.b32  	%r11, %r10, 1065353216;
	mov.b32 	 %f47, %r11;
	shr.u32 	%r12, %r9, 23;
	cvt.rn.f32.u32	%f48, %r12;
	add.f32 	%f49, %f45, %f48;
	setp.gt.f32	%p5, %f47, 0f3FB504F3;
	mul.f32 	%f50, %f47, 0f3F000000;
	add.f32 	%f51, %f49, 0f3F800000;
	selp.f32	%f52, %f50, %f47, %p5;
	selp.f32	%f53, %f51, %f49, %p5;
	add.f32 	%f54, %f52, 0fBF800000;
	add.f32 	%f36, %f52, 0f3F800000;
	// inline asm
	rcp.approx.ftz.f32 %f35,%f36;
	// inline asm
	add.f32 	%f55, %f54, %f54;
	mul.f32 	%f56, %f35, %f55;
	mul.f32 	%f57, %f56, %f56;
	mov.f32 	%f58, 0f3C4CAF63;
	mov.f32 	%f59, 0f3B18F0FE;
	fma.rn.f32 	%f60, %f59, %f57, %f58;
	mov.f32 	%f61, 0f3DAAAABD;
	fma.rn.f32 	%f62, %f60, %f57, %f61;
	mul.rn.f32 	%f63, %f62, %f57;
	mul.rn.f32 	%f64, %f63, %f56;
	sub.f32 	%f65, %f54, %f56;
	neg.f32 	%f66, %f56;
	add.f32 	%f67, %f65, %f65;
	fma.rn.f32 	%f68, %f66, %f54, %f67;
	mul.rn.f32 	%f69, %f35, %f68;
	add.f32 	%f70, %f64, %f56;
	sub.f32 	%f71, %f56, %f70;
	add.f32 	%f72, %f64, %f71;
	add.f32 	%f73, %f69, %f72;
	add.f32 	%f74, %f70, %f73;
	sub.f32 	%f75, %f70, %f74;
	add.f32 	%f76, %f73, %f75;
	mov.f32 	%f77, 0f3F317200;
	mul.rn.f32 	%f78, %f53, %f77;
	mov.f32 	%f79, 0f35BFBE8E;
	mul.rn.f32 	%f80, %f53, %f79;
	add.f32 	%f81, %f78, %f74;
	sub.f32 	%f82, %f78, %f81;
	add.f32 	%f83, %f74, %f82;
	add.f32 	%f84, %f76, %f83;
	add.f32 	%f85, %f80, %f84;
	add.f32 	%f86, %f81, %f85;
	sub.f32 	%f87, %f81, %f86;
	add.f32 	%f88, %f85, %f87;
	abs.f32 	%f3, %f34;
	setp.gt.f32	%p6, %f3, 0f77F684DF;
	mul.f32 	%f89, %f34, 0f39000000;
	selp.f32	%f4, %f89, %f34, %p6;
	mul.rn.f32 	%f90, %f4, %f86;
	neg.f32 	%f91, %f90;
	fma.rn.f32 	%f92, %f4, %f86, %f91;
	fma.rn.f32 	%f93, %f4, %f88, %f92;
	mov.f32 	%f94, 0f00000000;
	fma.rn.f32 	%f95, %f94, %f86, %f93;
	add.rn.f32 	%f96, %f90, %f95;
	neg.f32 	%f97, %f96;
	add.rn.f32 	%f98, %f90, %f97;
	add.rn.f32 	%f99, %f98, %f95;
	mov.b32 	 %r13, %f96;
	setp.eq.s32	%p7, %r13, 1118925336;
	add.s32 	%r14, %r13, -1;
	mov.b32 	 %f100, %r14;
	add.f32 	%f101, %f99, 0f37000000;
	selp.f32	%f102, %f100, %f96, %p7;
	selp.f32	%f5, %f101, %f99, %p7;
	mul.f32 	%f103, %f102, 0f3FB8AA3B;
	cvt.rzi.f32.f32	%f104, %f103;
	mov.f32 	%f105, 0fBF317200;
	fma.rn.f32 	%f106, %f104, %f105, %f102;
	mov.f32 	%f107, 0fB5BFBE8E;
	fma.rn.f32 	%f108, %f104, %f107, %f106;
	mul.f32 	%f109, %f108, 0f3FB8AA3B;
	ex2.approx.ftz.f32 	%f110, %f109;
	add.f32 	%f111, %f104, 0f00000000;
	ex2.approx.f32 	%f112, %f111;
	mul.f32 	%f113, %f110, %f112;
	setp.lt.f32	%p8, %f102, 0fC2D20000;
	selp.f32	%f114, 0f00000000, %f113, %p8;
	setp.gt.f32	%p9, %f102, 0f42D20000;
	selp.f32	%f252, 0f7F800000, %f114, %p9;
	setp.eq.f32	%p10, %f252, 0f7F800000;
	@%p10 bra 	BB1_3;

	fma.rn.f32 	%f252, %f252, %f5, %f252;

BB1_3:
	ld.param.f32 	%f208, [adamfloat_param_5];
	setp.lt.f32	%p11, %f208, 0f00000000;
	setp.eq.f32	%p12, %f1, 0f3F800000;
	and.pred  	%p1, %p11, %p12;
	mov.b32 	 %r15, %f252;
	xor.b32  	%r16, %r15, -2147483648;
	mov.b32 	 %f115, %r16;
	selp.f32	%f254, %f115, %f252, %p1;
	setp.eq.f32	%p13, %f208, 0f00000000;
	@%p13 bra 	BB1_6;
	bra.uni 	BB1_4;

BB1_6:
	ld.param.f32 	%f242, [adamfloat_param_5];
	add.f32 	%f117, %f242, %f242;
	mov.b32 	 %r17, %f117;
	selp.b32	%r18, %r17, 0, %p12;
	or.b32  	%r19, %r18, 2139095040;
	setp.lt.f32	%p17, %f34, 0f00000000;
	selp.b32	%r20, %r19, %r18, %p17;
	mov.b32 	 %f254, %r20;
	bra.uni 	BB1_7;

BB1_4:
	ld.param.f32 	%f209, [adamfloat_param_5];
	setp.geu.f32	%p14, %f209, 0f00000000;
	@%p14 bra 	BB1_7;

	cvt.rzi.f32.f32	%f116, %f34;
	setp.neu.f32	%p15, %f116, %f34;
	selp.f32	%f254, 0f7FFFFFFF, %f254, %p15;

BB1_7:
	abs.f32 	%f212, %f34;
	ld.param.f32 	%f211, [adamfloat_param_5];
	abs.f32 	%f210, %f211;
	add.f32 	%f118, %f210, %f212;
	mov.b32 	 %r21, %f118;
	setp.lt.s32	%p18, %r21, 2139095040;
	@%p18 bra 	BB1_14;

	abs.f32 	%f235, %f34;
	ld.param.f32 	%f234, [adamfloat_param_5];
	abs.f32 	%f233, %f234;
	setp.gtu.f32	%p19, %f233, 0f7F800000;
	setp.gtu.f32	%p20, %f235, 0f7F800000;
	or.pred  	%p21, %p19, %p20;
	@%p21 bra 	BB1_13;
	bra.uni 	BB1_9;

BB1_13:
	ld.param.f32 	%f241, [adamfloat_param_5];
	add.f32 	%f254, %f241, %f34;
	bra.uni 	BB1_14;

BB1_9:
	abs.f32 	%f236, %f34;
	setp.eq.f32	%p22, %f236, 0f7F800000;
	@%p22 bra 	BB1_12;
	bra.uni 	BB1_10;

BB1_12:
	ld.param.f32 	%f240, [adamfloat_param_5];
	abs.f32 	%f239, %f240;
	setp.gt.f32	%p25, %f239, 0f3F800000;
	selp.b32	%r25, 2139095040, 0, %p25;
	xor.b32  	%r26, %r25, 2139095040;
	setp.lt.f32	%p26, %f34, 0f00000000;
	selp.b32	%r27, %r26, %r25, %p26;
	mov.b32 	 %f119, %r27;
	setp.eq.f32	%p27, %f240, 0fBF800000;
	selp.f32	%f254, 0f3F800000, %f119, %p27;
	bra.uni 	BB1_14;

BB1_10:
	ld.param.f32 	%f238, [adamfloat_param_5];
	abs.f32 	%f237, %f238;
	setp.neu.f32	%p23, %f237, 0f7F800000;
	@%p23 bra 	BB1_14;

	setp.ltu.f32	%p24, %f34, 0f00000000;
	selp.b32	%r22, 0, 2139095040, %p24;
	or.b32  	%r23, %r22, -2147483648;
	selp.b32	%r24, %r23, %r22, %p1;
	mov.b32 	 %f254, %r24;

BB1_14:
	mov.f32 	%f222, 0fB5BFBE8E;
	mov.f32 	%f221, 0fBF317200;
	mov.f32 	%f220, 0f00000000;
	mov.f32 	%f219, 0f35BFBE8E;
	mov.f32 	%f218, 0f3F317200;
	mov.f32 	%f217, 0f3DAAAABD;
	mov.f32 	%f216, 0f3C4CAF63;
	mov.f32 	%f215, 0f3B18F0FE;
	ld.param.f32 	%f214, [adamfloat_param_6];
	ld.param.u64 	%rd17, [adamfloat_param_3];
	cvta.to.global.u64 	%rd16, %rd17;
	mov.f64 	%fd25, 0d3FF0000000000000;
	ld.param.f32 	%f213, [adamfloat_param_5];
	setp.eq.f32	%p28, %f34, 0f00000000;
	setp.eq.f32	%p29, %f213, 0f3F800000;
	or.pred  	%p30, %p29, %p28;
	cvt.f64.f32	%fd9, %f254;
	sub.f64 	%fd11, %fd25, %fd9;
	selp.f64	%fd12, 0d0000000000000000, %fd11, %p30;
	div.rn.f64 	%fd13, %fd1, %fd12;
	cvt.rn.f32.f64	%f17, %fd13;
	add.s64 	%rd13, %rd16, %rd9;
	ld.global.f32 	%f122, [%rd13];
	mul.f32 	%f123, %f122, %f214;
	cvt.f64.f32	%fd14, %f123;
	cvt.f64.f32	%fd15, %f214;
	sub.f64 	%fd16, %fd25, %fd15;
	ld.global.f32 	%f124, [%rd3];
	cvt.f64.f32	%fd17, %f124;
	mul.f64 	%fd18, %fd16, %fd17;
	fma.rn.f64 	%fd19, %fd17, %fd18, %fd14;
	cvt.rn.f32.f64	%f125, %fd19;
	st.global.f32 	[%rd13], %f125;
	cvt.f64.f32	%fd2, %f125;
	abs.f32 	%f18, %f214;
	setp.lt.f32	%p31, %f18, 0f00800000;
	mul.f32 	%f126, %f18, 0f4B800000;
	selp.f32	%f127, 0fC3170000, 0fC2FE0000, %p31;
	selp.f32	%f128, %f126, %f18, %p31;
	mov.b32 	 %r28, %f128;
	and.b32  	%r29, %r28, 8388607;
	or.b32  	%r30, %r29, 1065353216;
	mov.b32 	 %f129, %r30;
	shr.u32 	%r31, %r28, 23;
	cvt.rn.f32.u32	%f130, %r31;
	add.f32 	%f131, %f127, %f130;
	setp.gt.f32	%p32, %f129, 0f3FB504F3;
	mul.f32 	%f132, %f129, 0f3F000000;
	add.f32 	%f133, %f131, 0f3F800000;
	selp.f32	%f134, %f132, %f129, %p32;
	selp.f32	%f135, %f133, %f131, %p32;
	add.f32 	%f136, %f134, 0fBF800000;
	add.f32 	%f121, %f134, 0f3F800000;
	// inline asm
	rcp.approx.ftz.f32 %f120,%f121;
	// inline asm
	add.f32 	%f137, %f136, %f136;
	mul.f32 	%f138, %f120, %f137;
	mul.f32 	%f139, %f138, %f138;
	fma.rn.f32 	%f142, %f215, %f139, %f216;
	fma.rn.f32 	%f144, %f142, %f139, %f217;
	mul.rn.f32 	%f145, %f144, %f139;
	mul.rn.f32 	%f146, %f145, %f138;
	sub.f32 	%f147, %f136, %f138;
	neg.f32 	%f148, %f138;
	add.f32 	%f149, %f147, %f147;
	fma.rn.f32 	%f150, %f148, %f136, %f149;
	mul.rn.f32 	%f151, %f120, %f150;
	add.f32 	%f152, %f146, %f138;
	sub.f32 	%f153, %f138, %f152;
	add.f32 	%f154, %f146, %f153;
	add.f32 	%f155, %f151, %f154;
	add.f32 	%f156, %f152, %f155;
	sub.f32 	%f157, %f152, %f156;
	add.f32 	%f158, %f155, %f157;
	mul.rn.f32 	%f160, %f135, %f218;
	mul.rn.f32 	%f162, %f135, %f219;
	add.f32 	%f163, %f160, %f156;
	sub.f32 	%f164, %f160, %f163;
	add.f32 	%f165, %f156, %f164;
	add.f32 	%f166, %f158, %f165;
	add.f32 	%f167, %f162, %f166;
	add.f32 	%f168, %f163, %f167;
	sub.f32 	%f169, %f163, %f168;
	add.f32 	%f170, %f167, %f169;
	mul.rn.f32 	%f171, %f4, %f168;
	neg.f32 	%f172, %f171;
	fma.rn.f32 	%f173, %f4, %f168, %f172;
	fma.rn.f32 	%f174, %f4, %f170, %f173;
	fma.rn.f32 	%f176, %f220, %f168, %f174;
	add.rn.f32 	%f177, %f171, %f176;
	neg.f32 	%f178, %f177;
	add.rn.f32 	%f179, %f171, %f178;
	add.rn.f32 	%f180, %f179, %f176;
	mov.b32 	 %r32, %f177;
	setp.eq.s32	%p33, %r32, 1118925336;
	add.s32 	%r33, %r32, -1;
	mov.b32 	 %f181, %r33;
	add.f32 	%f182, %f180, 0f37000000;
	selp.f32	%f183, %f181, %f177, %p33;
	selp.f32	%f19, %f182, %f180, %p33;
	mul.f32 	%f184, %f183, 0f3FB8AA3B;
	cvt.rzi.f32.f32	%f185, %f184;
	fma.rn.f32 	%f187, %f185, %f221, %f183;
	fma.rn.f32 	%f189, %f185, %f222, %f187;
	mul.f32 	%f190, %f189, 0f3FB8AA3B;
	ex2.approx.ftz.f32 	%f191, %f190;
	add.f32 	%f192, %f185, 0f00000000;
	ex2.approx.f32 	%f193, %f192;
	mul.f32 	%f194, %f191, %f193;
	setp.lt.f32	%p34, %f183, 0fC2D20000;
	selp.f32	%f195, 0f00000000, %f194, %p34;
	setp.gt.f32	%p35, %f183, 0f42D20000;
	selp.f32	%f255, 0f7F800000, %f195, %p35;
	setp.eq.f32	%p36, %f255, 0f7F800000;
	@%p36 bra 	BB1_16;

	fma.rn.f32 	%f255, %f255, %f19, %f255;

BB1_16:
	ld.param.f32 	%f223, [adamfloat_param_6];
	setp.lt.f32	%p37, %f223, 0f00000000;
	and.pred  	%p2, %p37, %p12;
	mov.b32 	 %r34, %f255;
	xor.b32  	%r35, %r34, -2147483648;
	mov.b32 	 %f196, %r35;
	selp.f32	%f257, %f196, %f255, %p2;
	setp.eq.f32	%p39, %f223, 0f00000000;
	@%p39 bra 	BB1_19;
	bra.uni 	BB1_17;

BB1_19:
	ld.param.f32 	%f232, [adamfloat_param_6];
	add.f32 	%f198, %f232, %f232;
	mov.b32 	 %r36, %f198;
	selp.b32	%r37, %r36, 0, %p12;
	or.b32  	%r38, %r37, 2139095040;
	setp.lt.f32	%p43, %f34, 0f00000000;
	selp.b32	%r39, %r38, %r37, %p43;
	mov.b32 	 %f257, %r39;
	bra.uni 	BB1_20;

BB1_17:
	ld.param.f32 	%f224, [adamfloat_param_6];
	setp.geu.f32	%p40, %f224, 0f00000000;
	@%p40 bra 	BB1_20;

	cvt.rzi.f32.f32	%f197, %f34;
	setp.neu.f32	%p41, %f197, %f34;
	selp.f32	%f257, 0f7FFFFFFF, %f257, %p41;

BB1_20:
	ld.param.f32 	%f244, [adamfloat_param_6];
	abs.f32 	%f243, %f244;
	abs.f32 	%f225, %f34;
	add.f32 	%f199, %f243, %f225;
	mov.b32 	 %r40, %f199;
	setp.lt.s32	%p44, %r40, 2139095040;
	@%p44 bra 	BB1_27;

	ld.param.f32 	%f247, [adamfloat_param_6];
	abs.f32 	%f246, %f247;
	abs.f32 	%f228, %f34;
	setp.gtu.f32	%p45, %f246, 0f7F800000;
	setp.gtu.f32	%p46, %f228, 0f7F800000;
	or.pred  	%p47, %p45, %p46;
	@%p47 bra 	BB1_26;
	bra.uni 	BB1_22;

BB1_26:
	ld.param.f32 	%f231, [adamfloat_param_6];
	add.f32 	%f257, %f231, %f34;
	bra.uni 	BB1_27;

BB1_22:
	abs.f32 	%f229, %f34;
	setp.eq.f32	%p48, %f229, 0f7F800000;
	@%p48 bra 	BB1_25;
	bra.uni 	BB1_23;

BB1_25:
	ld.param.f32 	%f251, [adamfloat_param_6];
	abs.f32 	%f250, %f251;
	ld.param.f32 	%f230, [adamfloat_param_6];
	setp.gt.f32	%p51, %f250, 0f3F800000;
	selp.b32	%r44, 2139095040, 0, %p51;
	xor.b32  	%r45, %r44, 2139095040;
	setp.lt.f32	%p52, %f34, 0f00000000;
	selp.b32	%r46, %r45, %r44, %p52;
	mov.b32 	 %f200, %r46;
	setp.eq.f32	%p53, %f230, 0fBF800000;
	selp.f32	%f257, 0f3F800000, %f200, %p53;
	bra.uni 	BB1_27;

BB1_23:
	ld.param.f32 	%f249, [adamfloat_param_6];
	abs.f32 	%f248, %f249;
	setp.neu.f32	%p49, %f248, 0f7F800000;
	@%p49 bra 	BB1_27;

	setp.ltu.f32	%p50, %f34, 0f00000000;
	selp.b32	%r41, 0, 2139095040, %p50;
	or.b32  	%r42, %r41, -2147483648;
	selp.b32	%r43, %r42, %r41, %p2;
	mov.b32 	 %f257, %r43;

BB1_27:
	ld.param.f32 	%f245, [adamfloat_param_8];
	setp.eq.f32	%p57, %f245, 0f00000000;
	ld.param.u64 	%rd19, [adamfloat_param_1];
	cvta.to.global.u64 	%rd18, %rd19;
	ld.param.f32 	%f227, [adamfloat_param_7];
	ld.param.f32 	%f226, [adamfloat_param_6];
	mov.f64 	%fd26, 0d3FF0000000000000;
	setp.eq.f32	%p54, %f226, 0f3F800000;
	or.pred  	%p56, %p54, %p57;
	cvt.f64.f32	%fd20, %f257;
	sub.f64 	%fd22, %fd26, %fd20;
	selp.f64	%fd23, 0d0000000000000000, %fd22, %p56;
	div.rn.f64 	%fd24, %fd2, %fd23;
	cvt.rn.f32.f64	%f201, %fd24;
	sqrt.rn.f32 	%f202, %f201;
	add.f32 	%f203, %f202, %f227;
	mul.f32 	%f204, %f17, %f227;
	div.rn.f32 	%f205, %f204, %f203;
	add.s64 	%rd15, %rd18, %rd9;
	ld.global.f32 	%f206, [%rd15];
	sub.f32 	%f207, %f206, %f205;
	st.global.f32 	[%rd15], %f207;
	bar.sync 	0;
	ld.param.u64 	%rd22, [adamfloat_param_4];
	cvta.to.global.u64 	%rd21, %rd22;
	add.s64 	%rd20, %rd21, %rd9;
	mov.u32 	%r47, 0;
	st.global.u32 	[%rd20], %r47;

BB1_28:
	ret;
}

	// .globl	adadeltafloat
.visible .entry adadeltafloat(
	.param .u32 adadeltafloat_param_0,
	.param .u64 adadeltafloat_param_1,
	.param .u64 adadeltafloat_param_2,
	.param .u64 adadeltafloat_param_3,
	.param .u64 adadeltafloat_param_4,
	.param .f32 adadeltafloat_param_5,
	.param .f32 adadeltafloat_param_6
)
{
	.reg .pred 	%p<2>;
	.reg .f32 	%f<12>;
	.reg .b32 	%r<7>;
	.reg .b64 	%rd<11>;


	ld.param.u32 	%r2, [adadeltafloat_param_0];
	ld.param.u64 	%rd1, [adadeltafloat_param_1];
	ld.param.u64 	%rd2, [adadeltafloat_param_2];
	ld.param.u64 	%rd3, [adadeltafloat_param_4];
	ld.param.f32 	%f1, [adadeltafloat_param_5];
	ld.param.f32 	%f2, [adadeltafloat_param_6];
	mov.u32 	%r3, %ctaid.x;
	mov.u32 	%r4, %ntid.x;
	mov.u32 	%r5, %tid.x;
	mad.lo.s32 	%r1, %r4, %r3, %r5;
	setp.ge.s32	%p1, %r1, %r2;
	@%p1 bra 	BB2_2;

	cvta.to.global.u64 	%rd4, %rd2;
	mul.wide.s32 	%rd5, %r1, 4;
	add.s64 	%rd6, %rd4, %rd5;
	cvta.to.global.u64 	%rd7, %rd3;
	add.s64 	%rd8, %rd7, %rd5;
	ld.global.f32 	%f3, [%rd8];
	ld.global.f32 	%f4, [%rd6];
	fma.rn.f32 	%f5, %f3, %f3, %f4;
	st.global.f32 	[%rd6], %f5;
	ld.global.f32 	%f6, [%rd8];
	mul.f32 	%f7, %f6, %f1;
	neg.f32 	%f8, %f7;
	sqrt.rn.f32 	%f9, %f5;
	add.f32 	%f10, %f9, %f2;
	div.rn.f32 	%f11, %f8, %f10;
	cvta.to.global.u64 	%rd9, %rd1;
	add.s64 	%rd10, %rd9, %rd5;
	st.global.f32 	[%rd10], %f11;
	mov.u32 	%r6, 0;
	st.global.u32 	[%rd8], %r6;

BB2_2:
	ret;
}

	// .globl	l1regularizationfloat
.visible .entry l1regularizationfloat(
	.param .u32 l1regularizationfloat_param_0,
	.param .u64 l1regularizationfloat_param_1,
	.param .u64 l1regularizationfloat_param_2,
	.param .u64 l1regularizationfloat_param_3,
	.param .u64 l1regularizationfloat_param_4,
	.param .f32 l1regularizationfloat_param_5,
	.param .f32 l1regularizationfloat_param_6,
	.param .f32 l1regularizationfloat_param_7
)
{
	.reg .pred 	%p<3>;
	.reg .f32 	%f<12>;
	.reg .b32 	%r<6>;
	.reg .b64 	%rd<10>;


	ld.param.u32 	%r2, [l1regularizationfloat_param_0];
	ld.param.u64 	%rd1, [l1regularizationfloat_param_1];
	ld.param.u64 	%rd2, [l1regularizationfloat_param_2];
	ld.param.u64 	%rd3, [l1regularizationfloat_param_3];
	ld.param.f32 	%f1, [l1regularizationfloat_param_5];
	ld.param.f32 	%f2, [l1regularizationfloat_param_6];
	mov.u32 	%r3, %ctaid.x;
	mov.u32 	%r4, %ntid.x;
	mov.u32 	%r5, %tid.x;
	mad.lo.s32 	%r1, %r4, %r3, %r5;
	setp.ge.s32	%p1, %r1, %r2;
	@%p1 bra 	BB3_2;

	cvta.to.global.u64 	%rd4, %rd1;
	mul.wide.s32 	%rd5, %r1, 4;
	add.s64 	%rd6, %rd4, %rd5;
	ld.global.f32 	%f3, [%rd6];
	setp.lt.f32	%p2, %f3, 0f00000000;
	neg.f32 	%f4, %f2;
	selp.f32	%f5, %f4, %f2, %p2;
	cvta.to.global.u64 	%rd7, %rd2;
	add.s64 	%rd8, %rd7, %rd5;
	ld.global.f32 	%f6, [%rd8];
	mul.f32 	%f7, %f6, %f5;
	cvta.to.global.u64 	%rd9, %rd3;
	atom.global.add.f32 	%f8, [%rd9], %f7;
	ld.global.f32 	%f9, [%rd6];
	div.rn.f32 	%f10, %f9, %f1;
	add.f32 	%f11, %f5, %f10;
	st.global.f32 	[%rd6], %f11;

BB3_2:
	ret;
}

	// .globl	l2regularizationfloat
.visible .entry l2regularizationfloat(
	.param .u32 l2regularizationfloat_param_0,
	.param .u64 l2regularizationfloat_param_1,
	.param .u64 l2regularizationfloat_param_2,
	.param .u64 l2regularizationfloat_param_3,
	.param .u64 l2regularizationfloat_param_4,
	.param .f32 l2regularizationfloat_param_5,
	.param .f32 l2regularizationfloat_param_6,
	.param .f32 l2regularizationfloat_param_7
)
{
	.reg .pred 	%p<2>;
	.reg .f32 	%f<12>;
	.reg .b32 	%r<6>;
	.reg .b64 	%rd<10>;


	ld.param.u32 	%r2, [l2regularizationfloat_param_0];
	ld.param.u64 	%rd1, [l2regularizationfloat_param_1];
	ld.param.u64 	%rd2, [l2regularizationfloat_param_2];
	ld.param.u64 	%rd3, [l2regularizationfloat_param_4];
	ld.param.f32 	%f1, [l2regularizationfloat_param_5];
	ld.param.f32 	%f2, [l2regularizationfloat_param_7];
	mov.u32 	%r3, %ctaid.x;
	mov.u32 	%r4, %ntid.x;
	mov.u32 	%r5, %tid.x;
	mad.lo.s32 	%r1, %r4, %r3, %r5;
	setp.ge.s32	%p1, %r1, %r2;
	@%p1 bra 	BB4_2;

	cvta.to.global.u64 	%rd4, %rd2;
	mul.wide.s32 	%rd5, %r1, 4;
	add.s64 	%rd6, %rd4, %rd5;
	ld.global.f32 	%f3, [%rd6];
	mul.f32 	%f4, %f3, %f3;
	mul.f32 	%f5, %f4, %f2;
	mul.f32 	%f6, %f5, 0f3F000000;
	cvta.to.global.u64 	%rd7, %rd3;
	atom.global.add.f32 	%f7, [%rd7], %f6;
	cvta.to.global.u64 	%rd8, %rd1;
	add.s64 	%rd9, %rd8, %rd5;
	ld.global.f32 	%f8, [%rd9];
	div.rn.f32 	%f9, %f8, %f1;
	ld.global.f32 	%f10, [%rd6];
	fma.rn.f32 	%f11, %f10, %f2, %f9;
	st.global.f32 	[%rd9], %f11;

BB4_2:
	ret;
}

	// .globl	l1l2regularizationfloat
.visible .entry l1l2regularizationfloat(
	.param .u32 l1l2regularizationfloat_param_0,
	.param .u64 l1l2regularizationfloat_param_1,
	.param .u64 l1l2regularizationfloat_param_2,
	.param .u64 l1l2regularizationfloat_param_3,
	.param .u64 l1l2regularizationfloat_param_4,
	.param .f32 l1l2regularizationfloat_param_5,
	.param .f32 l1l2regularizationfloat_param_6,
	.param .f32 l1l2regularizationfloat_param_7
)
{
	.reg .pred 	%p<3>;
	.reg .f32 	%f<20>;
	.reg .b32 	%r<6>;
	.reg .b64 	%rd<12>;


	ld.param.u32 	%r2, [l1l2regularizationfloat_param_0];
	ld.param.u64 	%rd1, [l1l2regularizationfloat_param_1];
	ld.param.u64 	%rd2, [l1l2regularizationfloat_param_2];
	ld.param.u64 	%rd3, [l1l2regularizationfloat_param_3];
	ld.param.u64 	%rd4, [l1l2regularizationfloat_param_4];
	ld.param.f32 	%f1, [l1l2regularizationfloat_param_5];
	ld.param.f32 	%f2, [l1l2regularizationfloat_param_6];
	ld.param.f32 	%f3, [l1l2regularizationfloat_param_7];
	mov.u32 	%r3, %ctaid.x;
	mov.u32 	%r4, %ntid.x;
	mov.u32 	%r5, %tid.x;
	mad.lo.s32 	%r1, %r4, %r3, %r5;
	setp.ge.s32	%p1, %r1, %r2;
	@%p1 bra 	BB5_2;

	cvta.to.global.u64 	%rd5, %rd1;
	mul.wide.s32 	%rd6, %r1, 4;
	add.s64 	%rd7, %rd5, %rd6;
	ld.global.f32 	%f4, [%rd7];
	setp.lt.f32	%p2, %f4, 0f00000000;
	neg.f32 	%f5, %f2;
	selp.f32	%f6, %f5, %f2, %p2;
	cvta.to.global.u64 	%rd8, %rd2;
	add.s64 	%rd9, %rd8, %rd6;
	ld.global.f32 	%f7, [%rd9];
	mul.f32 	%f8, %f7, %f6;
	cvta.to.global.u64 	%rd10, %rd3;
	atom.global.add.f32 	%f9, [%rd10], %f8;
	ld.global.f32 	%f10, [%rd9];
	mul.f32 	%f11, %f10, %f10;
	mul.f32 	%f12, %f11, %f3;
	mul.f32 	%f13, %f12, 0f3F000000;
	cvta.to.global.u64 	%rd11, %rd4;
	atom.global.add.f32 	%f14, [%rd11], %f13;
	ld.global.f32 	%f15, [%rd7];
	div.rn.f32 	%f16, %f15, %f1;
	ld.global.f32 	%f17, [%rd9];
	fma.rn.f32 	%f18, %f17, %f3, %f16;
	add.f32 	%f19, %f18, %f2;
	st.global.f32 	[%rd7], %f19;

BB5_2:
	ret;
}

	// .globl	simpleadds
.visible .entry simpleadds(
	.param .u32 simpleadds_param_0,
	.param .u64 simpleadds_param_1,
	.param .u64 simpleadds_param_2,
	.param .u64 simpleadds_param_3,
	.param .u64 simpleadds_param_4
)
{
	.reg .pred 	%p<2>;
	.reg .f32 	%f<7>;
	.reg .b32 	%r<6>;
	.reg .b64 	%rd<14>;


	ld.param.u32 	%r2, [simpleadds_param_0];
	ld.param.u64 	%rd1, [simpleadds_param_1];
	ld.param.u64 	%rd2, [simpleadds_param_2];
	ld.param.u64 	%rd3, [simpleadds_param_3];
	ld.param.u64 	%rd4, [simpleadds_param_4];
	mov.u32 	%r3, %ctaid.x;
	mov.u32 	%r4, %ntid.x;
	mov.u32 	%r5, %tid.x;
	mad.lo.s32 	%r1, %r4, %r3, %r5;
	setp.ge.s32	%p1, %r1, %r2;
	@%p1 bra 	BB6_2;

	cvta.to.global.u64 	%rd5, %rd1;
	mul.wide.s32 	%rd6, %r1, 4;
	add.s64 	%rd7, %rd5, %rd6;
	cvta.to.global.u64 	%rd8, %rd2;
	add.s64 	%rd9, %rd8, %rd6;
	ld.global.f32 	%f1, [%rd9];
	ld.global.f32 	%f2, [%rd7];
	add.f32 	%f3, %f2, %f1;
	cvta.to.global.u64 	%rd10, %rd3;
	add.s64 	%rd11, %rd10, %rd6;
	st.global.f32 	[%rd11], %f3;
	ld.global.f32 	%f4, [%rd9];
	ld.global.f32 	%f5, [%rd7];
	add.f32 	%f6, %f5, %f4;
	cvta.to.global.u64 	%rd12, %rd4;
	add.s64 	%rd13, %rd12, %rd6;
	st.global.f32 	[%rd13], %f6;

BB6_2:
	ret;
}

	// .globl	copyto
.visible .entry copyto(
	.param .u32 copyto_param_0,
	.param .u64 copyto_param_1,
	.param .u64 copyto_param_2
)
{
	.reg .pred 	%p<2>;
	.reg .f32 	%f<2>;
	.reg .b32 	%r<9>;
	.reg .b64 	%rd<8>;


	ld.param.u32 	%r2, [copyto_param_0];
	ld.param.u64 	%rd1, [copyto_param_1];
	ld.param.u64 	%rd2, [copyto_param_2];
	mov.u32 	%r3, %ctaid.y;
	mov.u32 	%r4, %nctaid.x;
	mov.u32 	%r5, %ctaid.x;
	mad.lo.s32 	%r6, %r4, %r3, %r5;
	mov.u32 	%r7, %ntid.x;
	mov.u32 	%r8, %tid.x;
	mad.lo.s32 	%r1, %r6, %r7, %r8;
	setp.ge.s32	%p1, %r1, %r2;
	@%p1 bra 	BB7_2;

	cvta.to.global.u64 	%rd3, %rd2;
	mul.wide.s32 	%rd4, %r1, 4;
	add.s64 	%rd5, %rd3, %rd4;
	ld.global.f32 	%f1, [%rd5];
	cvta.to.global.u64 	%rd6, %rd1;
	add.s64 	%rd7, %rd6, %rd4;
	st.global.f32 	[%rd7], %f1;

BB7_2:
	ret;
}


